{"version":3,"sources":["components/Header.js","components/Footer.js","components/Home.js","components/MovieCard.js","components/Content.js","App.js","serviceWorker.js","index.js"],"names":["Header","curPage","useState","showMenu","setShowMenu","className","onClick","class","href","Footer","name","src","alt","Home","changePage","MovieCard","data","images","url","title","Content","movieData","setMovieData","loading","setLoading","error","setError","fetchData","a","fetch","response","json","movies","filteredMovies","entries","filter","e","programType","releaseYear","sortedMovies","sort","b","slice","err","console","useEffect","map","key","App","setCurPage","changePageHandler","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.74d0e5f7.chunk.js","sourcesContent":["import React, {useState} from 'react'\n\nconst Header = ({curPage})=>{\n    const [showMenu, setShowMenu] = useState(false)\n\n    return(\n        <nav className=\"header\">\n            <div className=\"wrapper\">\n                <div className=\"header-content\">\n                    <h2> DEMO Streaming</h2>\n                    <div className=\"show-m\" onClick={()=>setShowMenu(!showMenu)}>\n                        {!showMenu ? (<i class=\"fas fa-bars\"></i>) : (<i class=\"fas fa-times\"></i>)}\n                    </div>\n                        <div className=\"hide-m\">\n                            <a href=\"#\"> Log In</a>\n                            <button className=\"btn-gray\"> Start your free trial</button>\n                        </div> \n                        {showMenu && ( <div className=\"mobile-menu\">\n                            <a href=\"#\"> Log In</a>\n                            <button className=\"btn-white\"> Start your free trial</button>\n                        </div>)}\n                                \n                </div>\n                \n            </div>\n        <div className=\"title-tiles\">\n                    <div className=\"wrapper\">\n                        <h3>Popular {curPage === \"home\"? \"Titles\" : curPage ===\"series\"? \"Series\": curPage===\"movie\"? \"Movies\" : null}</h3>\n                    </div>\n        </div>\n        </nav>\n    )\n}\n\nexport default Header","import React from 'react'\n\nconst Footer = ()=>{\n    return(\n        <footer>\n            <div className=\"wrapper\">\n                <div className=\"footer-nav-links\">\n                    <ul>\n                        <li> <a href=\"#\"> Home </a></li>\n                        <li>|</li>\n                        <li> <a href=\"#\"> Terms and Conditions </a></li>\n                        <li>|</li>\n                        <li> <a href=\"#\"> Privacy Policy </a></li>\n                        <li>|</li>\n                        <li> <a href=\"#\"> Collection Statement </a></li>\n                        <li>|</li>\n                        <li> <a href=\"#\"> Help </a></li>\n                        <li>|</li>\n                        <li> <a href=\"#\"> Manage Account </a></li>\n                    </ul>\n                </div>\n\n                \n                <div className=\"footer-copyright\"> \n                    Copyright &#169; 2016 <span name=\"organization\">DEMO Streaming </span> All Rights Reserved\n                </div>\n\n                <div className=\"flex\">\n                <div className=\"footer-social-media\">\n                    <ul>\n                        <li> <a href=\"#\"> <i class=\"fab fa-facebook-f\"></i></a></li>\n                        <li> <a href=\"#\"> <i class=\"fab fa-twitter\"></i> </a></li>\n                        <li> <a href=\"#\"> <i class=\"fab fa-instagram\"></i></a></li>\n                    </ul>\n                </div>\n\n                <div className=\"footer-apps-downloads\">\n                    <ul>\n                        <li><a href=\"#\"><img src=\"assets/ios-icon.svg\" alt=\"download on App Store\" /></a></li>\n                        <li><a href=\"#\"> <img src=\"assets/google-play-badge.png\" alt=\"download on google play\" /></a></li>\n                        <li><a href=\"#\"> <img src=\"assets/en.png\" alt=\"get it from microsoft\" /></a></li>\n                    </ul>\n                </div>\n                </div>\n                \n            </div>\n        </footer>\n    )\n\n}\n\nexport default Footer","import React, {Fragment} from 'react'\n\nconst Home = ({changePage})=>{\n    return(\n<Fragment>\n                        <div className=\"movie-card home-page-card\" onClick={()=>{changePage(\"series\")}}>\n                            <div className=\"card-content\">\n                                <div className=\"card-content-bg\">\n                                    <i class=\"fas fa-film\"></i>\n                                </div>\n                                <div className=\"card-content-content\">\n                                    <h4> SERIES</h4>\n                                </div>\n                            </div>\n                            <div className=\"card-title\">\n                                <h5>Popular Series</h5>\n                            </div>\n                        </div>\n\n                         <div className=\"movie-card home-page-card\" onClick={()=>changePage(\"movie\")}>\n                             <div className=\"card-content\">\n                                <div className=\"card-content-bg\">\n                                        <i class=\"fas fa-film\"></i>\n                                    </div>\n                                    <div className=\"card-content-content\">\n                                        <h4> MOVIES</h4>\n                                    </div>\n                             </div>\n                            <div className=\"card-title\">\n                                    <h5>Popular Movies</h5>\n                            </div>\n                         </div>\n                    </Fragment>\n    )\n}\n\nexport default Home;","import React from 'react'\n\nconst MovieCard = ({data})=>{\n\n    return(\n        <div className=\"movie-card\">\n            <div className=\"card-content\">\n                <div className=\"movie-card-image\">\n                    <img src={data.images[\"Poster Art\"].url} alt={data.title}/>\n                </div>\n            </div>\n            <div className=\"card-title\">\n                 <h5> {data.title}</h5>\n            </div>    \n        </div>\n    )\n\n}\n\nexport default MovieCard","import React, {useEffect, useState} from 'react'\nimport Home from './Home'\nimport MovieCard from './MovieCard'\n\nconst Content = ({curPage, changePage})=>{\n    const [movieData, setMovieData] = useState(null)\n    const [loading, setLoading] = useState(false)\n    const [error, setError] = useState(false)\n\n    const fetchData = async(curPage)=>{\n        setLoading(true)\n        setMovieData(null)\n        const response = await fetch('https://raw.githubusercontent.com/StreamCo/react-coding-challenge/master/feed/sample.json')\n        const movies = await response.json()\n        try{\n            const filteredMovies = movies.entries.filter(e=> e.programType === curPage && e.releaseYear >=2010)\n            const sortedMovies = filteredMovies.sort(function(a,b) {\n                return a.title > b.title ? 0 : -1\n            }).slice(0, 21)\n            setMovieData(sortedMovies)\n            setLoading(false)\n        }\n        catch(err){\n            console.error(err)\n            setError(true)\n        }\n    }\n    \n    useEffect(()=>{\n        if(curPage === \"home\"){\n            setMovieData(null)\n        } else if(curPage === \"series\" || curPage === \"movie\"){\n             fetchData(curPage)\n        } \n    }, [curPage])\n\n\n    return(\n        <main className=\"main-content-container\">\n\n                <div className=\"wrapper\">\n\n                {curPage === \"series\" || curPage ===\"movie\" ? \n                        (<div className=\"goBack\" onClick={()=>{changePage(\"home\")}}> Back </div>): null}\n\n\n                   <div className=\"movie-cards-container\">\n\n                    {curPage === \"home\" && (\n                    <Home changePage={(e)=>changePage(e)}/>\n                    )}\n \n                    {loading && (<h3> Loading...</h3>)}\n                    {error && (<h3> Oops. Something went wrong</h3>)}\n\n                    {movieData !==null && (\n                        movieData.map(e=> <MovieCard key={e.title} data={e} />)\n                    )}\n                  </div>\n                </div>\n        </main>\n    )\n\n}\n\nexport default Content","import React, {Fragment, useState} from 'react';\nimport './App.css';\n\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport Content from './components/Content'\n\n\nfunction App() {\n  const [curPage, setCurPage] = useState(\"home\")\n  const changePageHandler = (e)=>{\n    setCurPage(e)\n  }\n  return (\n    <Fragment>\n      <Header curPage={curPage}/>\n \n       <Content curPage={curPage} changePage ={(e)=>changePageHandler(e)}/>\n  \n      <Footer />\n    </Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nserviceWorker.unregister();\n"],"sourceRoot":""}